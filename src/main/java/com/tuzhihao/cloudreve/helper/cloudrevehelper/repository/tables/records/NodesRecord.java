/*
 * This file is generated by jOOQ.
 */
package com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.records;


import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.Nodes;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NodesRecord extends UpdatableRecordImpl<NodesRecord> implements Record13<Integer, LocalDateTime, LocalDateTime, LocalDateTime, Integer, String, Integer, String, String, String, Object, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>nodes.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>nodes.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>nodes.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>nodes.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>nodes.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>nodes.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>nodes.deleted_at</code>.
     */
    public void setDeletedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>nodes.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>nodes.status</code>.
     */
    public void setStatus(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>nodes.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>nodes.name</code>.
     */
    public void setName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>nodes.name</code>.
     */
    public String getName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>nodes.type</code>.
     */
    public void setType(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>nodes.type</code>.
     */
    public Integer getType() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>nodes.server</code>.
     */
    public void setServer(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>nodes.server</code>.
     */
    public String getServer() {
        return (String) get(7);
    }

    /**
     * Setter for <code>nodes.slave_key</code>.
     */
    public void setSlaveKey(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>nodes.slave_key</code>.
     */
    public String getSlaveKey() {
        return (String) get(8);
    }

    /**
     * Setter for <code>nodes.master_key</code>.
     */
    public void setMasterKey(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>nodes.master_key</code>.
     */
    public String getMasterKey() {
        return (String) get(9);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public void setAria2Enabled(Object value) {
        set(10, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public Object getAria2Enabled() {
        return get(10);
    }

    /**
     * Setter for <code>nodes.aria2_options</code>.
     */
    public void setAria2Options(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>nodes.aria2_options</code>.
     */
    public String getAria2Options() {
        return (String) get(11);
    }

    /**
     * Setter for <code>nodes.rank</code>.
     */
    public void setRank(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>nodes.rank</code>.
     */
    public Integer getRank() {
        return (Integer) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, LocalDateTime, LocalDateTime, LocalDateTime, Integer, String, Integer, String, String, String, Object, String, Integer> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Integer, LocalDateTime, LocalDateTime, LocalDateTime, Integer, String, Integer, String, String, String, Object, String, Integer> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Nodes.NODES.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Nodes.NODES.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Nodes.NODES.UPDATED_AT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Nodes.NODES.DELETED_AT;
    }

    @Override
    public Field<Integer> field5() {
        return Nodes.NODES.STATUS;
    }

    @Override
    public Field<String> field6() {
        return Nodes.NODES.NAME;
    }

    @Override
    public Field<Integer> field7() {
        return Nodes.NODES.TYPE;
    }

    @Override
    public Field<String> field8() {
        return Nodes.NODES.SERVER;
    }

    @Override
    public Field<String> field9() {
        return Nodes.NODES.SLAVE_KEY;
    }

    @Override
    public Field<String> field10() {
        return Nodes.NODES.MASTER_KEY;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public Field<Object> field11() {
        return Nodes.NODES.ARIA2_ENABLED;
    }

    @Override
    public Field<String> field12() {
        return Nodes.NODES.ARIA2_OPTIONS;
    }

    @Override
    public Field<Integer> field13() {
        return Nodes.NODES.RANK;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component3() {
        return getUpdatedAt();
    }

    @Override
    public LocalDateTime component4() {
        return getDeletedAt();
    }

    @Override
    public Integer component5() {
        return getStatus();
    }

    @Override
    public String component6() {
        return getName();
    }

    @Override
    public Integer component7() {
        return getType();
    }

    @Override
    public String component8() {
        return getServer();
    }

    @Override
    public String component9() {
        return getSlaveKey();
    }

    @Override
    public String component10() {
        return getMasterKey();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public Object component11() {
        return getAria2Enabled();
    }

    @Override
    public String component12() {
        return getAria2Options();
    }

    @Override
    public Integer component13() {
        return getRank();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value3() {
        return getUpdatedAt();
    }

    @Override
    public LocalDateTime value4() {
        return getDeletedAt();
    }

    @Override
    public Integer value5() {
        return getStatus();
    }

    @Override
    public String value6() {
        return getName();
    }

    @Override
    public Integer value7() {
        return getType();
    }

    @Override
    public String value8() {
        return getServer();
    }

    @Override
    public String value9() {
        return getSlaveKey();
    }

    @Override
    public String value10() {
        return getMasterKey();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public Object value11() {
        return getAria2Enabled();
    }

    @Override
    public String value12() {
        return getAria2Options();
    }

    @Override
    public Integer value13() {
        return getRank();
    }

    @Override
    public NodesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public NodesRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public NodesRecord value3(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public NodesRecord value4(LocalDateTime value) {
        setDeletedAt(value);
        return this;
    }

    @Override
    public NodesRecord value5(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public NodesRecord value6(String value) {
        setName(value);
        return this;
    }

    @Override
    public NodesRecord value7(Integer value) {
        setType(value);
        return this;
    }

    @Override
    public NodesRecord value8(String value) {
        setServer(value);
        return this;
    }

    @Override
    public NodesRecord value9(String value) {
        setSlaveKey(value);
        return this;
    }

    @Override
    public NodesRecord value10(String value) {
        setMasterKey(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public NodesRecord value11(Object value) {
        setAria2Enabled(value);
        return this;
    }

    @Override
    public NodesRecord value12(String value) {
        setAria2Options(value);
        return this;
    }

    @Override
    public NodesRecord value13(Integer value) {
        setRank(value);
        return this;
    }

    @Override
    public NodesRecord values(Integer value1, LocalDateTime value2, LocalDateTime value3, LocalDateTime value4, Integer value5, String value6, Integer value7, String value8, String value9, String value10, Object value11, String value12, Integer value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NodesRecord
     */
    public NodesRecord() {
        super(Nodes.NODES);
    }

    /**
     * Create a detached, initialised NodesRecord
     */
    public NodesRecord(Integer id, LocalDateTime createdAt, LocalDateTime updatedAt, LocalDateTime deletedAt, Integer status, String name, Integer type, String server, String slaveKey, String masterKey, Object aria2Enabled, String aria2Options, Integer rank) {
        super(Nodes.NODES);

        setId(id);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setDeletedAt(deletedAt);
        setStatus(status);
        setName(name);
        setType(type);
        setServer(server);
        setSlaveKey(slaveKey);
        setMasterKey(masterKey);
        setAria2Enabled(aria2Enabled);
        setAria2Options(aria2Options);
        setRank(rank);
    }
}
