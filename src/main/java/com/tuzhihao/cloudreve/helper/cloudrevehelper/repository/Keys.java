/*
 * This file is generated by jOOQ.
 */
package com.tuzhihao.cloudreve.helper.cloudrevehelper.repository;


import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.Downloads;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.Files;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.Folders;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.Groups;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.Nodes;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.Policies;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.Settings;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.Shares;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.Tags;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.Tasks;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.Users;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.Webdavs;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.records.DownloadsRecord;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.records.FilesRecord;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.records.FoldersRecord;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.records.GroupsRecord;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.records.NodesRecord;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.records.PoliciesRecord;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.records.SettingsRecord;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.records.SharesRecord;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.records.TagsRecord;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.records.TasksRecord;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.records.UsersRecord;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.records.WebdavsRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * the default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DownloadsRecord> PK_DOWNLOADS = Internal.createUniqueKey(Downloads.DOWNLOADS, DSL.name("pk_downloads"), new TableField[] { Downloads.DOWNLOADS.ID }, true);
    public static final UniqueKey<FilesRecord> PK_FILES = Internal.createUniqueKey(Files.FILES, DSL.name("pk_files"), new TableField[] { Files.FILES.ID }, true);
    public static final UniqueKey<FoldersRecord> PK_FOLDERS = Internal.createUniqueKey(Folders.FOLDERS, DSL.name("pk_folders"), new TableField[] { Folders.FOLDERS.ID }, true);
    public static final UniqueKey<GroupsRecord> PK_GROUPS = Internal.createUniqueKey(Groups.GROUPS, DSL.name("pk_groups"), new TableField[] { Groups.GROUPS.ID }, true);
    public static final UniqueKey<NodesRecord> PK_NODES = Internal.createUniqueKey(Nodes.NODES, DSL.name("pk_nodes"), new TableField[] { Nodes.NODES.ID }, true);
    public static final UniqueKey<PoliciesRecord> PK_POLICIES = Internal.createUniqueKey(Policies.POLICIES, DSL.name("pk_policies"), new TableField[] { Policies.POLICIES.ID }, true);
    public static final UniqueKey<SettingsRecord> PK_SETTINGS = Internal.createUniqueKey(Settings.SETTINGS, DSL.name("pk_settings"), new TableField[] { Settings.SETTINGS.ID }, true);
    public static final UniqueKey<SettingsRecord> SQLITE_AUTOINDEX_SETTINGS_1 = Internal.createUniqueKey(Settings.SETTINGS, DSL.name("sqlite_autoindex_settings_1"), new TableField[] { Settings.SETTINGS.NAME }, true);
    public static final UniqueKey<SharesRecord> PK_SHARES = Internal.createUniqueKey(Shares.SHARES, DSL.name("pk_shares"), new TableField[] { Shares.SHARES.ID }, true);
    public static final UniqueKey<TagsRecord> PK_TAGS = Internal.createUniqueKey(Tags.TAGS, DSL.name("pk_tags"), new TableField[] { Tags.TAGS.ID }, true);
    public static final UniqueKey<TasksRecord> PK_TASKS = Internal.createUniqueKey(Tasks.TASKS, DSL.name("pk_tasks"), new TableField[] { Tasks.TASKS.ID }, true);
    public static final UniqueKey<UsersRecord> PK_USERS = Internal.createUniqueKey(Users.USERS, DSL.name("pk_users"), new TableField[] { Users.USERS.ID }, true);
    public static final UniqueKey<WebdavsRecord> PK_WEBDAVS = Internal.createUniqueKey(Webdavs.WEBDAVS, DSL.name("pk_webdavs"), new TableField[] { Webdavs.WEBDAVS.ID }, true);
}
