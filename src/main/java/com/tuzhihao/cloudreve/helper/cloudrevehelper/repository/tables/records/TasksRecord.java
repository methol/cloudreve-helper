/*
 * This file is generated by jOOQ.
 */
package com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.records;


import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.Tasks;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TasksRecord extends UpdatableRecordImpl<TasksRecord> implements Record10<Integer, LocalDateTime, LocalDateTime, LocalDateTime, Integer, Integer, Integer, Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>tasks.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>tasks.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>tasks.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>tasks.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>tasks.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>tasks.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>tasks.deleted_at</code>.
     */
    public void setDeletedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>tasks.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>tasks.status</code>.
     */
    public void setStatus(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>tasks.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>tasks.type</code>.
     */
    public void setType(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>tasks.type</code>.
     */
    public Integer getType() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>tasks.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>tasks.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>tasks.progress</code>.
     */
    public void setProgress(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>tasks.progress</code>.
     */
    public Integer getProgress() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>tasks.error</code>.
     */
    public void setError(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>tasks.error</code>.
     */
    public String getError() {
        return (String) get(8);
    }

    /**
     * Setter for <code>tasks.props</code>.
     */
    public void setProps(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>tasks.props</code>.
     */
    public String getProps() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, LocalDateTime, LocalDateTime, LocalDateTime, Integer, Integer, Integer, Integer, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, LocalDateTime, LocalDateTime, LocalDateTime, Integer, Integer, Integer, Integer, String, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Tasks.TASKS.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Tasks.TASKS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Tasks.TASKS.UPDATED_AT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Tasks.TASKS.DELETED_AT;
    }

    @Override
    public Field<Integer> field5() {
        return Tasks.TASKS.STATUS;
    }

    @Override
    public Field<Integer> field6() {
        return Tasks.TASKS.TYPE;
    }

    @Override
    public Field<Integer> field7() {
        return Tasks.TASKS.USER_ID;
    }

    @Override
    public Field<Integer> field8() {
        return Tasks.TASKS.PROGRESS;
    }

    @Override
    public Field<String> field9() {
        return Tasks.TASKS.ERROR;
    }

    @Override
    public Field<String> field10() {
        return Tasks.TASKS.PROPS;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component3() {
        return getUpdatedAt();
    }

    @Override
    public LocalDateTime component4() {
        return getDeletedAt();
    }

    @Override
    public Integer component5() {
        return getStatus();
    }

    @Override
    public Integer component6() {
        return getType();
    }

    @Override
    public Integer component7() {
        return getUserId();
    }

    @Override
    public Integer component8() {
        return getProgress();
    }

    @Override
    public String component9() {
        return getError();
    }

    @Override
    public String component10() {
        return getProps();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value3() {
        return getUpdatedAt();
    }

    @Override
    public LocalDateTime value4() {
        return getDeletedAt();
    }

    @Override
    public Integer value5() {
        return getStatus();
    }

    @Override
    public Integer value6() {
        return getType();
    }

    @Override
    public Integer value7() {
        return getUserId();
    }

    @Override
    public Integer value8() {
        return getProgress();
    }

    @Override
    public String value9() {
        return getError();
    }

    @Override
    public String value10() {
        return getProps();
    }

    @Override
    public TasksRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TasksRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public TasksRecord value3(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public TasksRecord value4(LocalDateTime value) {
        setDeletedAt(value);
        return this;
    }

    @Override
    public TasksRecord value5(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public TasksRecord value6(Integer value) {
        setType(value);
        return this;
    }

    @Override
    public TasksRecord value7(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public TasksRecord value8(Integer value) {
        setProgress(value);
        return this;
    }

    @Override
    public TasksRecord value9(String value) {
        setError(value);
        return this;
    }

    @Override
    public TasksRecord value10(String value) {
        setProps(value);
        return this;
    }

    @Override
    public TasksRecord values(Integer value1, LocalDateTime value2, LocalDateTime value3, LocalDateTime value4, Integer value5, Integer value6, Integer value7, Integer value8, String value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TasksRecord
     */
    public TasksRecord() {
        super(Tasks.TASKS);
    }

    /**
     * Create a detached, initialised TasksRecord
     */
    public TasksRecord(Integer id, LocalDateTime createdAt, LocalDateTime updatedAt, LocalDateTime deletedAt, Integer status, Integer type, Integer userId, Integer progress, String error, String props) {
        super(Tasks.TASKS);

        setId(id);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setDeletedAt(deletedAt);
        setStatus(status);
        setType(type);
        setUserId(userId);
        setProgress(progress);
        setError(error);
        setProps(props);
    }
}
