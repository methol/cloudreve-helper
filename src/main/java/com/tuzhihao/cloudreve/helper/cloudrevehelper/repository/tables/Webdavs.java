/*
 * This file is generated by jOOQ.
 */
package com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables;


import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.DefaultSchema;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.Indexes;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.Keys;
import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.records.WebdavsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Webdavs extends TableImpl<WebdavsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>webdavs</code>
     */
    public static final Webdavs WEBDAVS = new Webdavs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WebdavsRecord> getRecordType() {
        return WebdavsRecord.class;
    }

    /**
     * The column <code>webdavs.id</code>.
     */
    public final TableField<WebdavsRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>webdavs.created_at</code>.
     */
    public final TableField<WebdavsRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>webdavs.updated_at</code>.
     */
    public final TableField<WebdavsRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>webdavs.deleted_at</code>.
     */
    public final TableField<WebdavsRecord, LocalDateTime> DELETED_AT = createField(DSL.name("deleted_at"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>webdavs.name</code>.
     */
    public final TableField<WebdavsRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>webdavs.password</code>.
     */
    public final TableField<WebdavsRecord, String> PASSWORD = createField(DSL.name("password"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>webdavs.user_id</code>.
     */
    public final TableField<WebdavsRecord, Integer> USER_ID = createField(DSL.name("user_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>webdavs.root</code>.
     */
    public final TableField<WebdavsRecord, String> ROOT = createField(DSL.name("root"), SQLDataType.CLOB, this, "");

    private Webdavs(Name alias, Table<WebdavsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Webdavs(Name alias, Table<WebdavsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>webdavs</code> table reference
     */
    public Webdavs(String alias) {
        this(DSL.name(alias), WEBDAVS);
    }

    /**
     * Create an aliased <code>webdavs</code> table reference
     */
    public Webdavs(Name alias) {
        this(alias, WEBDAVS);
    }

    /**
     * Create a <code>webdavs</code> table reference
     */
    public Webdavs() {
        this(DSL.name("webdavs"), null);
    }

    public <O extends Record> Webdavs(Table<O> child, ForeignKey<O, WebdavsRecord> key) {
        super(child, key, WEBDAVS);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDX_WEBDAVS_DELETED_AT, Indexes.PASSWORD_ONLY_ON);
    }

    @Override
    public Identity<WebdavsRecord, Integer> getIdentity() {
        return (Identity<WebdavsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<WebdavsRecord> getPrimaryKey() {
        return Keys.PK_WEBDAVS;
    }

    @Override
    public List<UniqueKey<WebdavsRecord>> getKeys() {
        return Arrays.<UniqueKey<WebdavsRecord>>asList(Keys.PK_WEBDAVS);
    }

    @Override
    public Webdavs as(String alias) {
        return new Webdavs(DSL.name(alias), this);
    }

    @Override
    public Webdavs as(Name alias) {
        return new Webdavs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Webdavs rename(String name) {
        return new Webdavs(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Webdavs rename(Name name) {
        return new Webdavs(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, LocalDateTime, LocalDateTime, LocalDateTime, String, String, Integer, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
