/*
 * This file is generated by jOOQ.
 */
package com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.records;


import com.tuzhihao.cloudreve.helper.cloudrevehelper.repository.tables.Shares;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SharesRecord extends UpdatableRecordImpl<SharesRecord> implements Record14<Integer, LocalDateTime, LocalDateTime, LocalDateTime, String, Object, Integer, Integer, Integer, Integer, Integer, LocalDateTime, Object, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>shares.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>shares.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>shares.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>shares.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>shares.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>shares.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>shares.deleted_at</code>.
     */
    public void setDeletedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>shares.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>shares.password</code>.
     */
    public void setPassword(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>shares.password</code>.
     */
    public String getPassword() {
        return (String) get(4);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public void setIsDir(Object value) {
        set(5, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public Object getIsDir() {
        return get(5);
    }

    /**
     * Setter for <code>shares.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>shares.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>shares.source_id</code>.
     */
    public void setSourceId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>shares.source_id</code>.
     */
    public Integer getSourceId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>shares.views</code>.
     */
    public void setViews(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>shares.views</code>.
     */
    public Integer getViews() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>shares.downloads</code>.
     */
    public void setDownloads(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>shares.downloads</code>.
     */
    public Integer getDownloads() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>shares.remain_downloads</code>.
     */
    public void setRemainDownloads(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>shares.remain_downloads</code>.
     */
    public Integer getRemainDownloads() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>shares.expires</code>.
     */
    public void setExpires(LocalDateTime value) {
        set(11, value);
    }

    /**
     * Getter for <code>shares.expires</code>.
     */
    public LocalDateTime getExpires() {
        return (LocalDateTime) get(11);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public void setPreviewEnabled(Object value) {
        set(12, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public Object getPreviewEnabled() {
        return get(12);
    }

    /**
     * Setter for <code>shares.source_name</code>.
     */
    public void setSourceName(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>shares.source_name</code>.
     */
    public String getSourceName() {
        return (String) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Integer, LocalDateTime, LocalDateTime, LocalDateTime, String, Object, Integer, Integer, Integer, Integer, Integer, LocalDateTime, Object, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Integer, LocalDateTime, LocalDateTime, LocalDateTime, String, Object, Integer, Integer, Integer, Integer, Integer, LocalDateTime, Object, String> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Shares.SHARES.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Shares.SHARES.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Shares.SHARES.UPDATED_AT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Shares.SHARES.DELETED_AT;
    }

    @Override
    public Field<String> field5() {
        return Shares.SHARES.PASSWORD;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public Field<Object> field6() {
        return Shares.SHARES.IS_DIR;
    }

    @Override
    public Field<Integer> field7() {
        return Shares.SHARES.USER_ID;
    }

    @Override
    public Field<Integer> field8() {
        return Shares.SHARES.SOURCE_ID;
    }

    @Override
    public Field<Integer> field9() {
        return Shares.SHARES.VIEWS;
    }

    @Override
    public Field<Integer> field10() {
        return Shares.SHARES.DOWNLOADS;
    }

    @Override
    public Field<Integer> field11() {
        return Shares.SHARES.REMAIN_DOWNLOADS;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return Shares.SHARES.EXPIRES;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public Field<Object> field13() {
        return Shares.SHARES.PREVIEW_ENABLED;
    }

    @Override
    public Field<String> field14() {
        return Shares.SHARES.SOURCE_NAME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component3() {
        return getUpdatedAt();
    }

    @Override
    public LocalDateTime component4() {
        return getDeletedAt();
    }

    @Override
    public String component5() {
        return getPassword();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public Object component6() {
        return getIsDir();
    }

    @Override
    public Integer component7() {
        return getUserId();
    }

    @Override
    public Integer component8() {
        return getSourceId();
    }

    @Override
    public Integer component9() {
        return getViews();
    }

    @Override
    public Integer component10() {
        return getDownloads();
    }

    @Override
    public Integer component11() {
        return getRemainDownloads();
    }

    @Override
    public LocalDateTime component12() {
        return getExpires();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public Object component13() {
        return getPreviewEnabled();
    }

    @Override
    public String component14() {
        return getSourceName();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value3() {
        return getUpdatedAt();
    }

    @Override
    public LocalDateTime value4() {
        return getDeletedAt();
    }

    @Override
    public String value5() {
        return getPassword();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public Object value6() {
        return getIsDir();
    }

    @Override
    public Integer value7() {
        return getUserId();
    }

    @Override
    public Integer value8() {
        return getSourceId();
    }

    @Override
    public Integer value9() {
        return getViews();
    }

    @Override
    public Integer value10() {
        return getDownloads();
    }

    @Override
    public Integer value11() {
        return getRemainDownloads();
    }

    @Override
    public LocalDateTime value12() {
        return getExpires();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public Object value13() {
        return getPreviewEnabled();
    }

    @Override
    public String value14() {
        return getSourceName();
    }

    @Override
    public SharesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SharesRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public SharesRecord value3(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public SharesRecord value4(LocalDateTime value) {
        setDeletedAt(value);
        return this;
    }

    @Override
    public SharesRecord value5(String value) {
        setPassword(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public SharesRecord value6(Object value) {
        setIsDir(value);
        return this;
    }

    @Override
    public SharesRecord value7(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public SharesRecord value8(Integer value) {
        setSourceId(value);
        return this;
    }

    @Override
    public SharesRecord value9(Integer value) {
        setViews(value);
        return this;
    }

    @Override
    public SharesRecord value10(Integer value) {
        setDownloads(value);
        return this;
    }

    @Override
    public SharesRecord value11(Integer value) {
        setRemainDownloads(value);
        return this;
    }

    @Override
    public SharesRecord value12(LocalDateTime value) {
        setExpires(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public SharesRecord value13(Object value) {
        setPreviewEnabled(value);
        return this;
    }

    @Override
    public SharesRecord value14(String value) {
        setSourceName(value);
        return this;
    }

    @Override
    public SharesRecord values(Integer value1, LocalDateTime value2, LocalDateTime value3, LocalDateTime value4, String value5, Object value6, Integer value7, Integer value8, Integer value9, Integer value10, Integer value11, LocalDateTime value12, Object value13, String value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SharesRecord
     */
    public SharesRecord() {
        super(Shares.SHARES);
    }

    /**
     * Create a detached, initialised SharesRecord
     */
    public SharesRecord(Integer id, LocalDateTime createdAt, LocalDateTime updatedAt, LocalDateTime deletedAt, String password, Object isDir, Integer userId, Integer sourceId, Integer views, Integer downloads, Integer remainDownloads, LocalDateTime expires, Object previewEnabled, String sourceName) {
        super(Shares.SHARES);

        setId(id);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setDeletedAt(deletedAt);
        setPassword(password);
        setIsDir(isDir);
        setUserId(userId);
        setSourceId(sourceId);
        setViews(views);
        setDownloads(downloads);
        setRemainDownloads(remainDownloads);
        setExpires(expires);
        setPreviewEnabled(previewEnabled);
        setSourceName(sourceName);
    }
}
